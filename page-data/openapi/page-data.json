{"componentChunkName":"component---src-templates-post-js","path":"/openapi/","result":{"data":{"markdownRemark":{"html":"<p>Before jumping into how </p>\n<h2>What is an HTTP Client</h2>\n<p>In order to define this, let's break it down into two separate definitions (as silly as it may seem).</p>\n<h3>What is HTTP</h3>\n<p><a href=\"https://www.w3schools.com/whatis/whatis_http.asp\">HTTP</a> is a protocol / procedure that web services follow to send and receive data from one another.</p>\n<div class=\"mermaid\" data-processed=\"true\"><svg id=\"mermaid-1590436833917\" width=\"660.453125\" xmlns=\"http://www.w3.org/2000/svg\" height=\"74\" viewBox=\"0 0 660.453125 74\"><style>#mermaid-1590436833917 .label{font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family);color:#333}#mermaid-1590436833917 .label text{fill:#333}#mermaid-1590436833917 .node rect,#mermaid-1590436833917 .node circle,#mermaid-1590436833917 .node ellipse,#mermaid-1590436833917 .node polygon,#mermaid-1590436833917 .node path{fill:#ECECFF;stroke:#9370db;stroke-width:1px}#mermaid-1590436833917 .node .label{text-align:center}#mermaid-1590436833917 .node.clickable{cursor:pointer}#mermaid-1590436833917 .arrowheadPath{fill:#333}#mermaid-1590436833917 .edgePath .path{stroke:#333;stroke-width:1.5px}#mermaid-1590436833917 .edgeLabel{background-color:#e8e8e8;text-align:center}#mermaid-1590436833917 .edgeLabel rect{opacity:0.5}#mermaid-1590436833917 .cluster rect{fill:#ffffde;stroke:#aa3;stroke-width:1px}#mermaid-1590436833917 .cluster text{fill:#333}#mermaid-1590436833917 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family);font-size:12px;background:#ffffde;border:1px solid #aa3;border-radius:2px;pointer-events:none;z-index:100}#mermaid-1590436833917 .actor{stroke:#ccf;fill:#ECECFF}#mermaid-1590436833917 text.actor{fill:#000;stroke:none}#mermaid-1590436833917 .actor-line{stroke:grey}#mermaid-1590436833917 .messageLine0{stroke-width:1.5;stroke-dasharray:'2 2';stroke:#333}#mermaid-1590436833917 .messageLine1{stroke-width:1.5;stroke-dasharray:'2 2';stroke:#333}#mermaid-1590436833917 #arrowhead{fill:#333}#mermaid-1590436833917 .sequenceNumber{fill:#fff}#mermaid-1590436833917 #sequencenumber{fill:#333}#mermaid-1590436833917 #crosshead path{fill:#333 !important;stroke:#333 !important}#mermaid-1590436833917 .messageText{fill:#333;stroke:none}#mermaid-1590436833917 .labelBox{stroke:#ccf;fill:#ECECFF}#mermaid-1590436833917 .labelText{fill:#000;stroke:none}#mermaid-1590436833917 .loopText{fill:#000;stroke:none}#mermaid-1590436833917 .loopLine{stroke-width:2;stroke-dasharray:'2 2';stroke:#ccf}#mermaid-1590436833917 .note{stroke:#aa3;fill:#fff5ad}#mermaid-1590436833917 .noteText{fill:black;stroke:none;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family);font-size:14px}#mermaid-1590436833917 .activation0{fill:#f4f4f4;stroke:#666}#mermaid-1590436833917 .activation1{fill:#f4f4f4;stroke:#666}#mermaid-1590436833917 .activation2{fill:#f4f4f4;stroke:#666}#mermaid-1590436833917 .mermaid-main-font{font-family:\"trebuchet ms\", verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 .section{stroke:none;opacity:0.2}#mermaid-1590436833917 .section0{fill:rgba(102,102,255,0.49)}#mermaid-1590436833917 .section2{fill:#fff400}#mermaid-1590436833917 .section1,#mermaid-1590436833917 .section3{fill:#fff;opacity:0.2}#mermaid-1590436833917 .sectionTitle0{fill:#333}#mermaid-1590436833917 .sectionTitle1{fill:#333}#mermaid-1590436833917 .sectionTitle2{fill:#333}#mermaid-1590436833917 .sectionTitle3{fill:#333}#mermaid-1590436833917 .sectionTitle{text-anchor:start;font-size:11px;text-height:14px;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 .grid .tick{stroke:#d3d3d3;opacity:0.8;shape-rendering:crispEdges}#mermaid-1590436833917 .grid .tick text{font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 .grid path{stroke-width:0}#mermaid-1590436833917 .today{fill:none;stroke:red;stroke-width:2px}#mermaid-1590436833917 .task{stroke-width:2}#mermaid-1590436833917 .taskText{text-anchor:middle;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 .taskText:not([font-size]){font-size:11px}#mermaid-1590436833917 .taskTextOutsideRight{fill:#000;text-anchor:start;font-size:11px;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 .taskTextOutsideLeft{fill:#000;text-anchor:end;font-size:11px}#mermaid-1590436833917 .task.clickable{cursor:pointer}#mermaid-1590436833917 .taskText.clickable{cursor:pointer;fill:#003163 !important;font-weight:bold}#mermaid-1590436833917 .taskTextOutsideLeft.clickable{cursor:pointer;fill:#003163 !important;font-weight:bold}#mermaid-1590436833917 .taskTextOutsideRight.clickable{cursor:pointer;fill:#003163 !important;font-weight:bold}#mermaid-1590436833917 .taskText0,#mermaid-1590436833917 .taskText1,#mermaid-1590436833917 .taskText2,#mermaid-1590436833917 .taskText3{fill:#fff}#mermaid-1590436833917 .task0,#mermaid-1590436833917 .task1,#mermaid-1590436833917 .task2,#mermaid-1590436833917 .task3{fill:#8a90dd;stroke:#534fbc}#mermaid-1590436833917 .taskTextOutside0,#mermaid-1590436833917 .taskTextOutside2{fill:#000}#mermaid-1590436833917 .taskTextOutside1,#mermaid-1590436833917 .taskTextOutside3{fill:#000}#mermaid-1590436833917 .active0,#mermaid-1590436833917 .active1,#mermaid-1590436833917 .active2,#mermaid-1590436833917 .active3{fill:#bfc7ff;stroke:#534fbc}#mermaid-1590436833917 .activeText0,#mermaid-1590436833917 .activeText1,#mermaid-1590436833917 .activeText2,#mermaid-1590436833917 .activeText3{fill:#000 !important}#mermaid-1590436833917 .done0,#mermaid-1590436833917 .done1,#mermaid-1590436833917 .done2,#mermaid-1590436833917 .done3{stroke:grey;fill:#d3d3d3;stroke-width:2}#mermaid-1590436833917 .doneText0,#mermaid-1590436833917 .doneText1,#mermaid-1590436833917 .doneText2,#mermaid-1590436833917 .doneText3{fill:#000 !important}#mermaid-1590436833917 .crit0,#mermaid-1590436833917 .crit1,#mermaid-1590436833917 .crit2,#mermaid-1590436833917 .crit3{stroke:#f88;fill:red;stroke-width:2}#mermaid-1590436833917 .activeCrit0,#mermaid-1590436833917 .activeCrit1,#mermaid-1590436833917 .activeCrit2,#mermaid-1590436833917 .activeCrit3{stroke:#f88;fill:#bfc7ff;stroke-width:2}#mermaid-1590436833917 .doneCrit0,#mermaid-1590436833917 .doneCrit1,#mermaid-1590436833917 .doneCrit2,#mermaid-1590436833917 .doneCrit3{stroke:#f88;fill:#d3d3d3;stroke-width:2;cursor:pointer;shape-rendering:crispEdges}#mermaid-1590436833917 .milestone{transform:rotate(45deg) scale(0.8, 0.8)}#mermaid-1590436833917 .milestoneText{font-style:italic}#mermaid-1590436833917 .doneCritText0,#mermaid-1590436833917 .doneCritText1,#mermaid-1590436833917 .doneCritText2,#mermaid-1590436833917 .doneCritText3{fill:#000 !important}#mermaid-1590436833917 .activeCritText0,#mermaid-1590436833917 .activeCritText1,#mermaid-1590436833917 .activeCritText2,#mermaid-1590436833917 .activeCritText3{fill:#000 !important}#mermaid-1590436833917 .titleText{text-anchor:middle;font-size:18px;fill:#000;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 g.classGroup text{fill:#9370db;stroke:none;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family);font-size:10px}#mermaid-1590436833917 g.classGroup text .title{font-weight:bolder}#mermaid-1590436833917 g.clickable{cursor:pointer}#mermaid-1590436833917 g.classGroup rect{fill:#ECECFF;stroke:#9370db}#mermaid-1590436833917 g.classGroup line{stroke:#9370db;stroke-width:1}#mermaid-1590436833917 .classLabel .box{stroke:none;stroke-width:0;fill:#ECECFF;opacity:0.5}#mermaid-1590436833917 .classLabel .label{fill:#9370db;font-size:10px}#mermaid-1590436833917 .relation{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1590436833917 .dashed-line{stroke-dasharray:3}#mermaid-1590436833917 #compositionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1590436833917 #compositionEnd{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1590436833917 #aggregationStart{fill:#ECECFF;stroke:#9370db;stroke-width:1}#mermaid-1590436833917 #aggregationEnd{fill:#ECECFF;stroke:#9370db;stroke-width:1}#mermaid-1590436833917 #dependencyStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1590436833917 #dependencyEnd{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1590436833917 #extensionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1590436833917 #extensionEnd{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1590436833917 .commit-id,#mermaid-1590436833917 .commit-msg,#mermaid-1590436833917 .branch-label{fill:lightgrey;color:lightgrey;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 .pieTitleText{text-anchor:middle;font-size:25px;fill:#000;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 .slice{font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 g.stateGroup text{fill:#9370db;stroke:none;font-size:10px;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 g.stateGroup text{fill:#9370db;stroke:none;font-size:10px}#mermaid-1590436833917 g.stateGroup .state-title{font-weight:bolder;fill:#000}#mermaid-1590436833917 g.stateGroup rect{fill:#ECECFF;stroke:#9370db}#mermaid-1590436833917 g.stateGroup line{stroke:#9370db;stroke-width:1}#mermaid-1590436833917 .transition{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1590436833917 .stateGroup .composit{fill:white;border-bottom:1px}#mermaid-1590436833917 .stateGroup .alt-composit{fill:#e0e0e0;border-bottom:1px}#mermaid-1590436833917 .state-note{stroke:#aa3;fill:#fff5ad}#mermaid-1590436833917 .state-note text{fill:black;stroke:none;font-size:10px}#mermaid-1590436833917 .stateLabel .box{stroke:none;stroke-width:0;fill:#ECECFF;opacity:0.5}#mermaid-1590436833917 .stateLabel text{fill:#000;font-size:10px;font-weight:bold;font-family:'trebuchet ms', verdana, arial;font-family:var(--mermaid-font-family)}#mermaid-1590436833917 .node circle.state-start{fill:black;stroke:black}#mermaid-1590436833917 .node circle.state-end{fill:black;stroke:white;stroke-width:1.5}#mermaid-1590436833917 #statediagram-barbEnd{fill:#9370db}#mermaid-1590436833917 .statediagram-cluster rect{fill:#ECECFF;stroke:#9370db;stroke-width:1px}#mermaid-1590436833917 .statediagram-cluster rect.outer{rx:5px;ry:5px}#mermaid-1590436833917 .statediagram-state .divider{stroke:#9370db}#mermaid-1590436833917 .statediagram-state .title-state{rx:5px;ry:5px}#mermaid-1590436833917 .statediagram-cluster.statediagram-cluster .inner{fill:white}#mermaid-1590436833917 .statediagram-cluster.statediagram-cluster-alt .inner{fill:#e0e0e0}#mermaid-1590436833917 .statediagram-cluster .inner{rx:0;ry:0}#mermaid-1590436833917 .statediagram-state rect.basic{rx:5px;ry:5px}#mermaid-1590436833917 .statediagram-state rect.divider{stroke-dasharray:10,10;fill:#efefef}#mermaid-1590436833917 .note-edge{stroke-dasharray:5}#mermaid-1590436833917 .statediagram-note rect{fill:#fff5ad;stroke:#aa3;stroke-width:1px;rx:0;ry:0}:root{--mermaid-font-family: '\"trebuchet ms\", verdana, arial';--mermaid-font-family: \"Comic Sans MS\", \"Comic Sans\", cursive}\n\n:root { --mermaid-font-family: \"trebuchet ms\", verdana, arial;}</style><style>#mermaid-1590436833917 {\n    color: rgb(0, 0, 0);\n    font: 16px \"trebuchet ms\", verdana, arial;\n  }</style><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath\" style=\"opacity: 1;\"><path class=\"path\" d=\"M176.046875,29.180952203415107L301.5703125,17.5L427.09375,27.7757133486389\" marker-end=\"url(#arrowhead11)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead11\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath\" style=\"opacity: 1;\"><path class=\"path\" d=\"M427.09375,46.2242866513611L301.5703125,56.5L176.046875,44.81904779658489\" marker-end=\"url(#arrowhead12)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead12\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"translate(301.5703125,17.5)\" style=\"opacity: 1;\"><g transform=\"translate(-100.5234375,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"201.046875\" height=\"19\" style=\"fill:#e8e8e8;\"></rect><foreignObject width=\"201.046875\" height=\"19\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\"><span class=\"edgeLabel\">Http Request to google.com</span></div></foreignObject></g></g><g class=\"edgeLabel\" transform=\"translate(301.5703125,56.5)\" style=\"opacity: 1;\"><g transform=\"translate(-51.4296875,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"102.859375\" height=\"19\" style=\"fill:#e8e8e8;\"></rect><foreignObject width=\"102.859375\" height=\"19\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\"><span class=\"edgeLabel\">Http Response</span></div></foreignObject></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"A\" transform=\"translate(92.0234375,37)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-84.0234375\" y=\"-19.5\" width=\"168.046875\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-74.0234375,-9.5)\"><foreignObject width=\"148.046875\" height=\"19\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">Client: Your Browser</div></foreignObject></g></g></g><g class=\"node default\" id=\"B\" transform=\"translate(539.7734375,37)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-112.6796875\" y=\"-19.5\" width=\"225.359375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-102.6796875,-9.5)\"><foreignObject width=\"205.359375\" height=\"19\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">Service: Google's Datacenter</div></foreignObject></g></g></g></g></g></g></svg></div>\n<p>In the broader software industry, services typically communicate with each other via HTTP.\n(alternatives being RCP, AMQP, WebSockets, etc)</p>\n<p>While HTTP does well to explain where services should request &#x26; send the data, it does not do a good job of explaining exactly how Company X formats their data.\nFor this reason, software developers invented additional specifications on top of HTTP to help describe the data being sent / received.</p>\n<p>The most common/popular architectural style of using HTTP is called REST (REpresentational State Transfer).</p>\n<p>RESTful services leverage HTTP and build upon it to <code class=\"language-text\">receive</code> / process data effeciently.\nThere are many conventions and best practices to follow in order to build a well behaved RESTful service.</p>\n<p>It can be daunting to started and follow best practices, but luckily there are many free frameworks that are available to help you get started.</p>\n<p>One of which is OpenApi.</p>\n<h3>What is a client</h3>\n<p>A client, in this context, is any application that communicates with a service over some protocol, like HTTP.</p>\n<p>It should behoove service owners to ensure that their clients are set up for success to communicate with their service.</p>\n<p>Clients care about the following:</p>\n<ul>\n<li>In what environments (locations) does your service exist?</li>\n<li>What are the endpoints / HTTP paths for these environments?</li>\n<li>What RESTful APIs exist, and what input do they accept?</li>\n<li>What do the API responses look like?</li>\n<li>What is the expected latency for a given API?</li>\n<li>Should I perform any client-side timeouts or rate limiting?</li>\n<li>When should I perform a retry for any given API?</li>\n<li>How do I authenticate myself with your service?</li>\n<li>How do I serialize / deserialize these json strings?</li>\n<li>What input limits or formats are required?</li>\n<li>What form of trace ID do you accept?</li>\n<li>What are your SLAs for a given API?</li>\n</ul>\n<h3>What is an HTTP client</h3>\n<p>An HTTP client is a library, published and owned by the service owners.</p>\n<p>An HTTP client is meant to answer some of the concerns listed above and provide hints/guidance for the rest.</p>\n<blockquote>\n<p>Note: An HTTP client can and should also be used by the service owner in integration tests</p>\n</blockquote>\n<p>An http client is published to support a specific application language (i.e. java, python, javascript, typescript)</p>\n<h2>How to create HTTP client</h2>\n<p>There are 2 main options for creating HTTP clients.</p>\n<ol>\n<li>Manually; Please don't attempt</li>\n<li>Automagically; Please do</li>\n</ol>\n<h3>Manually creating an HTTP client</h3>\n<table>\n<thead>\n<tr>\n<th>PROS</th>\n<th>CONS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>You have fine-grained control over the code</td>\n<td>You must update the code for each API change</td>\n</tr>\n<tr>\n<td></td>\n<td>You must implement libraries for each language you support</td>\n</tr>\n<tr>\n<td></td>\n<td>You risk the possibility of having bugs</td>\n</tr>\n</tbody>\n</table>\n<h3>How to generate an HTTP client</h3>\n<p>There are many tools available for code generation.</p>\n<p>A very popular one for generating HTTP clients is called OpenAPI</p>\n<p>There was a braindump on how to generate clients with OpenAPI that I highly recommend\n<a href=\"https://docs.google.com/presentation/d/1QKEs7wUTXK8_fw7CipLdlDCUeorJniIfZ4nB8dNJz1I\">slides</a> &#x26; <a href=\"https://drive.google.com/open?id=1itSVgAluwlw6L7c8XDAWldhs2C9xgEpN\">video</a></p>\n<h3>How to configure an HTTP client in ZOI</h3>\n<p>From the list of what clients care about, here are the questions that OpenAPI clients solve:</p>\n<ul>\n<li>In what environments does your service exist?</li>\n<li>\n<p>What are the endpoints / HTTP paths for these environments?</p>\n<ul>\n<li>The library should understand what system variables exist and should select the correct endpoint based on whether ENV=DEV/STG/PROD</li>\n</ul>\n</li>\n<li>What RESTful APIs exist, and what input do they accept?</li>\n<li>\n<p>What do the API responses look like?</p>\n<ul>\n<li>OpenAPI clients are generated with the API models defined in the specification file.</li>\n<li>See the braindump if you don't know what the <code class=\"language-text\">specification</code> file is.</li>\n</ul>\n</li>\n<li>\n<p>What is the expected latency for a given API?</p>\n<ul>\n<li>Ideally, the OpenAPI spec would have the ability to specify this, but it currently does not.</li>\n<li>There is an <a href=\"https://github.com/OAI/OpenAPI-Specification/issues/541\">open ticket for that</a></li>\n</ul>\n</li>\n<li>Should I perform any client-side timeouts or rate limiting?</li>\n<li>\n<p>When should I perform a retry for any given API?</p>\n<ul>\n<li>A client library should have these settings preconfigured if they are necessary.</li>\n<li>Retry logic can be built on a per-response basis by adding a response interceptor (but beware of retry-hell)</li>\n</ul>\n</li>\n<li>How do I authenticate myself with your service?</li>\n<li>\n<p>What form of trace ID do you accept?</p>\n<ul>\n<li>Authentication / Authorization via api-key and oauth are both supported in the OpenAPI specification </li>\n<li>Custom headers for trace IDs are also possible</li>\n</ul>\n</li>\n<li>How do I serialize / deserialize these json strings?</li>\n<li>\n<p>What input limits or formats are required?</p>\n<ul>\n<li>The client library should annotate the class models as necessary to serialize / deserialize them appropriately</li>\n<li>The library should also add validation logic on each field to handle input validation for you.</li>\n</ul>\n</li>\n</ul>\n<h3>[WIP] How to ZOIFY HTTP client generation?</h3>\n<blockquote>\n<p>Thanks to <code class=\"language-text\">@davidre</code> for his <a href=\"https://zwiki.zillowgroup.net/display/~davidre/Creating+a+Java+Client+in+ZOI+world\">initial writeup and investigation</a> </p>\n</blockquote>\n<p>Ideally, we would have a single repository where your API specification, service and client would live.</p>\n<p>However, with limitations in our gitlab pipelines we are only able to produce one artifact per repository.</p>\n<p>Therefore, we must split this into 3 repositories:</p>\n<ol>\n<li>A specification repository</li>\n<li>A service repository</li>\n<li>A client repository</li>\n</ol>\n<p>When the specification repository is updated, and merged, the build will trigger the pipelines for the client and the service.</p>\n<p>Gitlab's <a href=\"https://docs.gitlab.com/ee/ci/multi_project_pipelines.html\">multi-project pipelines</a> can be used to accomplish this.</p>","frontmatter":{"title":"Http Client Generation","date":"25 May, 2020","tags":["Http","Microservice","REST","OpenApi"]}}},"pageContext":{"slug":"/openapi/"}}}